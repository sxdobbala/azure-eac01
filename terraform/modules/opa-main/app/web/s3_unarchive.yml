# Downloads a zip from S3 and unpacks to a given target location
# Ensures idempotency using tracker files similar to creates/removes attributes of command module
# For some reason creates did not work with unarchive module, so ended up writing tasks to implement similar behavior
# These tasks require following variables
# bucket_name: Name of the S3 bucket
# object_name: S3 object name with prefixes
# filename: Name of the compressed file
# target_folder: Absolute path of the folder where zip should be unpacked

- block:  
  - name: Download file from s3
    aws_s3:
      bucket: "{{ bucket_name }}"
      object: "{{ object_name }}"
      mode: get
      dest: "{{ filename }}"
      overwrite: different
    register: s3_download

  - name: Remove tracker file if new file downloaded
    file: 
      path: "{{ filename }}.tracker"
      state: absent
    when: s3_download.changed

  - name: Check if tracker file exists
    stat:
      path: "{{ filename }}.tracker"
    register: tracker_file

  - name: Empty target folder, if configured
    file:
      path: "{{ target_folder }}"
      state: absent
    when: not tracker_file.stat.exists and clean_before_unarchive is defined and clean_before_unarchive == true

  - name: Ensure target folder
    file:
      path: "{{ target_folder }}"
      state: directory

  - name: Unarchive file only if tracker file does not exist
    unarchive:
      src: "{{ filename }}"
      dest: "{{ target_folder }}"
      owner: "{{ owner }}"
      group: "{{ group }}"
    no_log: true
    register: s3_unarchive
    when: not tracker_file.stat.exists

  - name: Create tracker file if not already exists
    file: 
      path: "{{ filename }}.tracker"
      state: touch
    when: not tracker_file.stat.exists
  
  rescue:
  - name: Remove tracker file to force unpack on retry
    file: 
      path: "{{ filename }}.tracker"
      state: absent

  - name: Throw original error
    fail:
      msg: "Task '{{ ansible_failed_task.name }}' failed with error: {{ ansible_failed_result }}"